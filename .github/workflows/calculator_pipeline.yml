name: Calculator CI/CD Pipeline

permissions:
  contents: read
  actions: read
  checks: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  unit-and-api-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r BE/requirements.txt
        pip install pytest requests httpx attrs typing-extensions python-dateutil pytest-asyncio
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=." >> $GITHUB_ENV
    
    - name: Start REST API in background
      run: |
        cd BE
        echo "Starting API server with default settings..."
        python calculator.py --rest &
        
        # Wait for server to start
        sleep 15
    
    - name: Run unit and API tests
      run: |
        pytest test/ --ignore=test/web --junit-xml=report.xml
    
    - name: Publish Test Results
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        report_paths: '**/*.xml'

  end-to-end-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Python dependencies for E2E tests
      run: |
        python -m pip install --upgrade pip
        pip install playwright pytest
    
    - name: Install Playwright browsers
      run: |
        playwright install chromium
    
    - name: Start Calculator application with Docker Compose
      run: |
        docker compose -p webcalculator up -d
    
    - name: Wait for application to be ready
      run: |
        echo "Waiting for application to start..."
        timeout 120 bash -c 'until curl -f http://localhost:8080/login.html; do echo "Waiting for app..."; sleep 5; done'
        echo "Application is ready!"
    
    - name: Set PYTHONPATH for E2E tests
      run: echo "PYTHONPATH=/home/runner/work/devops-Yahia-dot/devops-Yahia-dot" >> $GITHUB_ENV
    
    - name: Run end-to-end tests
      run: |
        cd test/web
        pytest -v --tb=short --junit-xml=e2e-report.xml
    
    - name: Upload E2E test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: e2e-test-results
        path: |
          test/web/e2e-report.xml
          test/web/test-results/
    
    - name: Publish E2E Test Results
      uses: mikepenz/action-junit-report@v5
      if: success() || failure()
      with:
        report_paths: 'test/web/e2e-report.xml'
        check_name: 'E2E Test Results'
    
    - name: Show Docker logs on failure
      if: failure()
      run: |
        echo "=== Docker Compose Logs ==="
        docker compose -p webcalculator logs
    
    - name: Stop Calculator application
      if: always()
      run: |
        docker compose -p webcalculator down
        docker compose -p webcalculator rm -f

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [unit-and-api-tests, end-to-end-tests]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: judevops.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build -t judevops.azurecr.io/yahia_alali-calculator ./BE
        docker push judevops.azurecr.io/yahia_alali-calculator