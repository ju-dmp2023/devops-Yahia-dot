name: Calculator CI/CD Pipeline

permissions:
  contents: read
  actions: read
  checks: write

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r BE/requirements.txt
        pip install pytest requests httpx attrs typing-extensions python-dateutil pytest-asyncio
    
    - name: Set PYTHONPATH
      run: echo "PYTHONPATH=." >> $GITHUB_ENV
    
    - name: Start REST API in background
      run: |
        cd BE
        echo "Starting API server with default settings..."
        python calculator.py --rest > ../api.log 2>&1 &
        API_PID=$!
        echo "API started with PID: $API_PID"
        
        # Wait for server to start
        sleep 15
        
        echo "Checking if process is running:"
        if kill -0 $API_PID 2>/dev/null; then
          echo "Process is still running"
        else
          echo "Process died. Server output:"
          cat ../api.log
          exit 1
        fi
        
        # Test common ports including 5002
        API_PORT=""
        for port in 5002 8000 5000 3000 8080; do
          echo "Testing port $port..."
          if curl -f --connect-timeout 5 http://localhost:$port/ 2>/dev/null; then
            echo "API is running on port $port"
            API_PORT=$port
            break
          fi
        done
        
        if [ -z "$API_PORT" ]; then
          echo "API not found on any port. Server output:"
          cat ../api.log
          echo "Network connections:"
          netstat -tlnp | grep python || echo "No python processes listening"
          exit 1
        fi
        
        # Save the port for tests
        echo "API_PORT=$API_PORT" >> $GITHUB_ENV
        echo "API is successfully running on port $API_PORT"
    
    - name: Run tests
      run: |
        echo "Running tests with API on port ${API_PORT:-5002}"
        # Update test files to use the correct port
        if [ ! -z "$API_PORT" ] && [ "$API_PORT" != "5001" ]; then
          echo "Updating test files to use port $API_PORT"
          sed -i "s/localhost:5001/localhost:$API_PORT/g" test/test_api.py
          sed -i "s/5001/$API_PORT/g" test/test_api.py
          sed -i "s/localhost:5001/localhost:$API_PORT/g" test/test_api_generated.py
          sed -i "s/5001/$API_PORT/g" test/test_api_generated.py
        fi
        pytest --junit-xml=report.xml
    
    - name: Show API logs on failure
      if: failure()
      run: |
        echo "API server output:"
        cat api.log 2>/dev/null || echo "No API log found"
        echo "Network connections:"
        netstat -tlnp || echo "Cannot show network connections"
    
    - name: Publish test results
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: pytest
        path: report.xml
        reporter: java-junit

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: judevops.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
    
    - name: Build and push Docker image
      run: |
        docker build -t judevops.azuecr.io/yahia_alali-calculator ./BE
        docker push judevops.azuecr.io/yahia_alali-calculator
